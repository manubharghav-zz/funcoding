/*
ID: manubha1
PROG: sort3
LANG: C++
*/

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <deque>
#include <algorithm>
#include <math.h>
#include <queue>

using namespace std;

/*
comments and test cases

USER: Manu Bhargava Nannuri [manubha1]
TASK: sort3
LANG: C++

Compiling...
Compile: OK

Executing...
   Test 1: TEST OK [0.000 secs, 3356 KB]
   Test 2: TEST OK [0.000 secs, 3356 KB]
   Test 3: TEST OK [0.000 secs, 3356 KB]
   Test 4: TEST OK [0.000 secs, 3356 KB]
   Test 5: TEST OK [0.000 secs, 3356 KB]
   Test 6: TEST OK [0.000 secs, 3356 KB]
   Test 7: TEST OK [0.000 secs, 3356 KB]
   Test 8: TEST OK [0.000 secs, 3356 KB]

All tests OK.
Your program ('sort3') produced all correct answers!  This is your
submission #5 for this problem.  Congratulations!

Here are the test data inputs:

------- test 1 ----
3
2
1
3
------- test 2 ----
2
1
1
------- test 3 ----
6
1
2
3
2
3
1
------- test 4 ----
9
2
2
1
3
3
3
2
3
1
------- test 5 ----
20
1
1
3
2
1
1
1
3
2
1
3
3
2
1
3
1
1
2
3
1
------- test 6 ----
50
1
1
1
3
1
3
2
1
2
3
3
1
3
2
1
1
2
3
2
2
3
3
2
3
2
2
3
1
1
1
1
1
1
1
3
1
1
2
2
3
1
1
3
3
2
1
1
1
3
2
------- test 7 ----
100
3
2
2
3
1
2
2
2
1
2
2
3
2
3
2
2
3
3
2
2
2
3
3
3
3
2
2
1
2
2
1
1
1
3
1
1
2
2
3
3
1
1
2
2
1
1
3
1
3
1
3
2
1
2
1
3
3
3
1
2
1
1
2
1
3
2
2
1
1
1
3
1
2
2
3
3
2
3
3
2
1
2
3
1
3
1
1
3
3
1
1
1
1
3
1
1
2
3
1
2
------- test 8 ----
1000
3
1
3
2
1
1
3
3
2
1
3
2
3
2
3
2
3
2
1
1
3
3
3
2
1
1
2
3
2
2
1
1
3
1
3
1
1
2
3
3
3
3
2
3
2
1
2
1
3
2
1
2
2
1
1
3
1
3
3
3
1
1
1
1
1
3
2
1
2
2
3
2
1
2
1
3
2
3
3
2
2
1
1
3
1
1
3
2
3
2
2
1
3
2
2
3
1
3
1
2
1
1
1
2
2
1
2
1
3
1
2
1
1
2
1
2
3
1
1
3
2
2
1
2
1
2
1
1
2
2
3
3
2
3
2
1
1
3
1
1
3
3
2
1
2
2
3
1
2
3
3
1
2
3
2
2
2
3
3
3
1
3
2
3
3
3
3
1
2
1
1
2
3
2
2
1
1
2
2
3
2
2
3
3
2
2
2
3
1
2
3
2
2
1
1
1
1
3
2
3
1
2
1
3
1
3
1
1
1
2
3
3
3
3
2
1
2
1
1
2
3
3
3
1
1
1
2
2
1
3
1
1
2
2
3
2
2
1
3
3
2
3
2
2
3
1
3
1
1
3
3
3
3
2
1
1
3
2
2
3
2
2
3
3
1
3
1
2
3
3
1
2
3
2
3
2
2
2
2
3
2
1
3
1
3
3
1
2
2
3
1
3
2
1
2
2
3
3
3
3
3
1
1
2
3
3
3
2
2
2
1
3
2
1
1
1
1
2
3
2
1
1
2
2
1
1
3
1
3
3
3
3
3
3
1
3
3
1
1
1
2
1
1
3
1
1
1
1
3
3
3
3
3
1
2
1
1
1
1
1
1
3
3
1
3
1
3
2
2
3
3
3
1
3
3
1
1
1
2
3
1
2
3
3
3
1
1
3
2
1
1
2
1
1
2
3
2
2
2
3
1
2
3
1
2
3
2
2
3
1
1
3
2
1
3
1
1
3
1
2
1
2
3
1
2
2
1
1
3
2
3
1
1
3
1
2
2
3
3
2
3
1
1
2
1
1
3
2
3
3
3
3
2
3
1
1
1
1
1
1
3
1
1
3
3
2
1
1
2
1
2
1
2
3
3
3
3
2
1
3
2
3
3
3
2
3
3
3
1
3
1
3
3
1
2
2
3
3
3
1
1
2
2
3
1
1
2
1
2
2
3
3
2
3
3
1
2
2
3
3
2
3
2
1
1
1
3
1
1
3
1
1
1
2
3
1
3
2
2
2
1
1
1
2
1
1
3
3
2
2
2
3
2
3
1
3
3
1
3
1
3
1
1
1
3
1
2
2
3
3
3
3
1
1
1
1
1
3
3
3
2
1
3
1
3
3
1
3
1
3
3
1
1
1
1
3
2
2
2
1
2
1
3
2
2
1
2
2
1
1
2
3
2
1
3
2
1
3
2
1
3
2
1
3
2
2
2
1
3
3
1
1
1
1
3
3
1
1
2
1
2
3
1
1
3
3
2
3
3
3
1
3
1
1
2
3
3
1
3
2
1
3
3
2
3
2
1
1
3
2
2
2
1
2
2
1
2
3
3
1
3
1
3
1
2
2
3
1
3
2
3
3
2
3
2
2
2
2
2
1
3
1
2
1
2
1
1
3
1
1
1
3
1
1
3
3
2
3
3
2
2
2
1
1
1
2
2
2
1
1
3
1
1
2
2
3
2
3
2
2
3
3
2
1
3
2
3
2
1
3
3
2
1
1
2
2
3
1
1
3
2
3
1
2
1
2
1
3
1
3
2
1
2
3
2
1
2
1
3
2
1
2
1
1
2
3
3
1
1
3
1
2
2
1
3
3
2
1
2
2
1
1
3
2
3
1
3
1
2
2
3
2
3
1
2
2
1
2
2
1
1
2
2
3
2
2
2
1
3
1
3
3
1
2
2
1
2
1
1
3
3
1
1
2
1
3
1
1
1
2
2
2
1
3
1
2
2
2
3
1
2
2
1
3
3
2
3
2
2
1
2
1
1
2
3
2
2
3
3
3
2
1
1
2
1
1
1
3
3
3
1
2
1
1
1
1
2
1
3
1
1
1
2
2
3
1
1
1
1
3
1
2
1
1
3
2
2
1
1
2
3
1
3
1
1
1
2
3
1
1
3
2
1
1
3
3
2
3
1
3
3
1
1
1
2
1
2
1
1
3
3
1
3
2
2
1
3
1
1
3
1
1
1
2
2
1
2
3
3
3
2
3
1
3
3
3
1
1
1
2
1
3
3
3
1
1
1
1
2
2
1
2
2
2
1
3
2
3
3
2

*/



int main(){

	int count[1000];
	int tmp,n,i,j,k,no1=0,no2=0,ans;
	ifstream fin("sort3.in");
	ofstream fout("sort3.out");
	
	fin >> n;
	ans=0;
	for(i=0;i<n;i++){
		fin >> tmp;
		count[i] = tmp;
		if(tmp==2){
			no2++;
		}
		else if(tmp==1){
			no1++;
		}
	}

	for(i=no1;i<n;i++){
		if(count[i]==1){
			k=0;
			for(j=0;j< no1;j++){
				if(count[j]==2){
					k=j;
					break;
				}
				else if(count[j]==3){
					k=j;
				}
			}
			swap(count[i],count[k]);
			ans++;
		}

	}

	for(i=no1;i<no1+no2 ;i++){
		if(count[i]==3){
			ans++;
		}
	}
	fout << ans << endl;
}